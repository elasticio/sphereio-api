var BaseSync, CategorySync, CategoryUtil, _,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

_ = require('underscore');

BaseSync = require('./base-sync');

CategoryUtil = require('./utils/category');

CategorySync = (function(superClass) {
  extend(CategorySync, superClass);

  CategorySync.actionGroups = [];

  function CategorySync() {
    this._utils = new CategoryUtil();
  }

  CategorySync.prototype._doMapActions = function(diff, new_obj, old_obj) {
    var actions;
    return actions = this._utils.actionsMap(diff, new_obj);
  };

  CategorySync.prototype._doUpdate = function() {
    return this._client.categories.byId(this._data.updateId).update(this._data.update);
  };

  return CategorySync;

})(BaseSync);

module.exports = CategorySync;
