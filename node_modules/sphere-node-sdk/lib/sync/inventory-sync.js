var BaseSync, InventorySync, InventoryUtils, _,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

_ = require('underscore');

BaseSync = require('./base-sync');

InventoryUtils = require('./utils/inventory');

InventorySync = (function(superClass) {
  extend(InventorySync, superClass);

  InventorySync.actionGroups = ['quantity', 'expectedDelivery'];

  function InventorySync() {
    this._utils = new InventoryUtils;
  }

  InventorySync.prototype._doMapActions = function(diff, new_obj, old_obj) {
    var allActions;
    allActions = [];
    allActions.push(this._mapActionOrNot('quantity', (function(_this) {
      return function() {
        return _this._utils.actionsMapQuantity(diff, old_obj);
      };
    })(this)));
    allActions.push(this._mapActionOrNot('expectedDelivery', (function(_this) {
      return function() {
        return _this._utils.actionsMapExpectedDelivery(diff, old_obj);
      };
    })(this)));
    return _.flatten(allActions);
  };

  return InventorySync;

})(BaseSync);

module.exports = InventorySync;
