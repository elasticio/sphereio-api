var BaseSync, ProductSync, ProductUtils, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require('underscore');

BaseSync = require('./base-sync');

ProductUtils = require('./utils/product');


/**
 * Product Sync class
 */

ProductSync = (function(_super) {
  __extends(ProductSync, _super);

  function ProductSync() {
    this._utils = new ProductUtils;
  }


  /**
   * @override
   */

  ProductSync.prototype.buildActions = function(new_obj, old_obj, sameForAllAttributeNames) {
    if (sameForAllAttributeNames == null) {
      sameForAllAttributeNames = [];
    }
    this.sameForAllAttributeNames = sameForAllAttributeNames;
    return ProductSync.__super__.buildActions.call(this, new_obj, old_obj);
  };


  /**
   * @override
   */

  ProductSync.prototype._doMapActions = function(diff, new_obj, old_obj) {
    var allActions;
    allActions = [];
    allActions.push(this._mapActionOrNot('base', (function(_this) {
      return function() {
        return _this._utils.actionsMapBase(diff, old_obj);
      };
    })(this)));
    allActions.push(this._mapActionOrNot('references', (function(_this) {
      return function() {
        return _this._utils.actionsMapReferences(diff, old_obj, new_obj);
      };
    })(this)));
    allActions.push(this._mapActionOrNot('prices', (function(_this) {
      return function() {
        return _this._utils.actionsMapPrices(diff, old_obj, new_obj);
      };
    })(this)));
    allActions.push(this._mapActionOrNot('attributes', (function(_this) {
      return function() {
        return _this._utils.actionsMapAttributes(diff, old_obj, new_obj, _this.sameForAllAttributeNames);
      };
    })(this)));
    allActions.push(this._mapActionOrNot('images', (function(_this) {
      return function() {
        return _this._utils.actionsMapImages(diff, old_obj, new_obj);
      };
    })(this)));
    allActions.push(this._mapActionOrNot('variants', (function(_this) {
      return function() {
        return _this._utils.actionsMapVariants(diff, old_obj, new_obj);
      };
    })(this)));
    allActions.push(this._mapActionOrNot('metaAttributes', (function(_this) {
      return function() {
        return _this._utils.actionsMapMetaAttributes(diff, old_obj, new_obj);
      };
    })(this)));
    return _.flatten(allActions);
  };

  return ProductSync;

})(BaseSync);

module.exports = ProductSync;
