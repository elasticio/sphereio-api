var BaseService, ProjectService,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

BaseService = require('./base');

ProjectService = (function(superClass) {
  extend(ProjectService, superClass);

  function ProjectService() {
    return ProjectService.__super__.constructor.apply(this, arguments);
  }

  ProjectService.baseResourceEndpoint = '';

  ProjectService.prototype.save = function() {};

  ProjectService.prototype.create = function() {};

  ProjectService.prototype.update = function() {};

  ProjectService.prototype["delete"] = function() {};

  return ProjectService;

})(BaseService);

module.exports = ProjectService;
